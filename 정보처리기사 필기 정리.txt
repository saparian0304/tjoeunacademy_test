2020년 3회 정보처리기사 필기 A형 

오답정리 - 1과목
5. 미들웨어 솔루션의 유형
WAS, RPC, MOM, TP-Monitor, ORB

WAS (WEB Application Server)
- 동적인 콘텐츠를 처리하기 위해 사용되는 미들웨어 (정적인 콘텐츠를 처리하는 웹 서버는 미들웨어가 X)
- 대표적인 종류 : WebLogic, WebSphere

RPC (Remote Procedure Call)
- 원격 프로시저를 호출하는 방식의 미들웨어

MOM (Message Oriented Middleware)
- 메시지 기반의 비동기형 메시지를 전달하는 미들웨어
- 이기종 분산 데이터시스템의 데이터 동기를 위해 많이 사용됨

TP-Monitor (Transaction Processing Monitor)
- 항공기나 철도 예약같은 트랜잭션을 처리 및 감시하는 미들웨어

ORB (Object Request Broker, 객체 요청 브로커)
- 객체 지향 미들웨어
- 코바(CORBA) 표준 스펙

오답정리 - 2과목
23. 소프트웨어 품질 표준 (품질 요구사항 section 15)

ISO/IEC 9126
- 기본적인 소프트웨어의 품질 특성과 평가를 위한 표준 지침
- 국제 표준으로 널리 사용

ISO/IEC 25010 (+보안성, 호환성)
- 9126에서 보안성, 호환성이 추가됨

ISO/IEC 12119 (+테스트 절차)
- 9126에서 테스트 절차가 포함됨

추가 용어 정리
- 성숙성 : 결함으로 인한 고장을 피해갈 수 있는 능력
- 친밀성 : 사용자가 S/W를 다시 사용하고 싶어하도록 하는 능력

25. 블렉박스 테스트 유형 (section 55. 테스트 기법에 따른 애플리케이션 테스트)

블랙박스 테스트 
- 주로 구현된 기능을 테스트함
- 종류 : 동치분할검사, 경계값 분석, 원인-효과 그래프 검사, 오류 예측 검사, 비교 검사

동치분할검사 
- 타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 정함
- 입력 자료에 맞는 결과가 출력되는지 확인하는 기법

경계값 분석 (★)
- 입력 조건의 경계값을 테스트 케이스로 선정하여 검사

원인-효과 그래프 검사(Cause-Effect Graphing Testing)
- 입력 데이터와 출력에 영향을 미치는 상황을 체계적으로 분석(graph)하여 효용성이 높은 테스트 케이스를 선정하여 검사

오류 예측 검사 (★)
- 과거의 경험이나 확인자의 감각으로 테스트하는 기법

비교 검사 (★★★)
- "여러 버전"의 프로그램에 동일한 테스트 자료를 제공해서 동일한 결과가 출력되는지 테스트

26번 맥케이브 순환도 (section 63. 복잡도)
맥케이브의 순환복잡도 (McCabe's Cyclomatic)
- 순환복잡도 = 화살표 수 - 노드수 + 2 
  (V(G) = E - N +2 )

27번 선택정렬 (Section 38. 정렬)
삽입정렬, 선택정렬, 버블정렬을 잘 구분하자

선택정렬
 - 첫 번째부터 위치 결정

버블정렬
 - 마지막부터 위치 결정
 - 이웃한 애들끼리 비교

삽입정렬
 - 처음부분부터 정렬 시작 (뒷 부분은 건들지 않음)
 - 이미 정렬한 수열에 다음 수를 삽입해서 정렬해가는 과정

그 외 정렬
 - 쉘 정렬(일정한 거리), 퀵 정렬(분할-정복), 힙 정렬(트리이용), 2-way 합병 정렬(조금씩 합치기), 기수정렬(분배식, 버킷)

31. 알고리즘 설계기법
: 분할정복, 동적계획법, 탐욕알고리즘, 백트래킹

분할 정복 / 분할 통치 (Divide and Conquer)
 - 큰 문제를 보다 작은 문제로 분할하여 해결

동적 계획법
 - 간단한 문제부터 해결하면서 상위로 나아감 : 상향식 접근

탐욕 알고리즘 (Greedy Algorithm)
 - 완전한 해결보다는 차선책을 목표로 한 알고리즘
 - 즉석에서 해결책을 모색하는 방식

백트래킹
 - 깊이 우선 탐색
 - 모든 가능성을 트리로 구축하는 방식

32. 형상관리 (Section 50. 소프트웨어 버전 등록)
해답 풀이는 잘 모르겠다.
형상관리의 기능에 대해서 정리하고 넘어가지

형상관리의 기능
 -형상 식별, 버전제어, 형상통제(변경관리), 형상감사, 형상기록(상태보고)

형상 식별 : 이름과 관리번호를 부여, 계층 구조로 구분
버전 제어 : 다른 버전의 형상 항목을 관리
형상 통제(변경 관리) : 기준선(BaseLine)이 잘 반영될 수 있도록 조정하는 작업
형상 감사 : 평가를 통해 승인하는 작업
형상 기록(상태 보고) : 작업의 결과를 기록하고 보고서를 작성하는 작업

- 버전제어와 형상통제의 차이점을 잘 구분하자
 버전제어 : 각각의 버전들을 관리
 형상통제 : 초점이 기준선(base line)에 맞춰져 있음


2020년 4회 정보처리기사 필기 A형 

오답정리 - 1과목

4. 객체지향 기법 - 캡슐화 (section 23 - 객체 지향)
캡슐화의 특징
 - 인터페이스가 단순화 된다 -> 객체의 세부내용을 알 필요가 없기때문
 - 소프트웨어의 재사용성이 높아진다 
 - 변경 발생시 오류의 파급효과가 적다 -> 접근이 제한적이기 때문
 - 객체간의 결합도가 낮아진다.
 - 정보은닉 기능을 가진다

상속의 특징
- 상위 클래스의 모든 속성과 연산을 하위 클래스가 물려받는 것
- 다중상속 : 한개의 클래스가 두 개 이상의 상위 클래스로부터 속성과 연산을 상속받는 것
- 재사용! + 구체화!

5. 객체지향 설계 원칙 (section 24 - 객체 지향 분석 및 설계)
리스코프 치환 원칙(LSP)
 - 자식 클래스는 최소한 자신의 부모클래스에서 가능한 행위는 수행할 수 있어야 한다.
 - 자식클래스는 부모 클래스의 책임을 무시하거나 재정의하지 않고 확장만 수행하도록 해야한다.

인터페이스 분리 원칙(ISP)
 - 자신이 사용하지 않는 인터페이스와 의존 관계를 맺거나 영향을 받지 않아야 한다.
 - 단일 책임 원칙이 객체가 가는 하나의 책임이라면, 인터페이스 분리 원칙은 인터페이스가 갖는 하나의 책임이다.

객체 지향 설계 원칙 5가지
- 단일책임원칙, 개방-폐쇄원칙, 리스코프 치환원칙, 인터페이스 분리 원칙, 의존 역전 원칙

6. 소프트웨어 아키텍처 (section 22 - 아키텍처 패턴)

파이프-필터 패턴
- 대표적인 예 : UNIX의 쉘(Shell)
- 데이터 변환, 버퍼링, 동기화 등에 사용된다.
- 데이터 스트림 절차의 각 단계를 필터 컴포넌트로 캡슐화 하여 파이트를 통해 데이터를 전송하는 패턴

그 외 아키텍처 패턴 : 레이어패턴, 클라이언트-서버패턴, 모델-뷰-컨트롤러 패턴(MVC패턴)

MVC패턴 (모델-뷰-컨트롤러 패턴)
- 모델 : 서브 시스템의 핵심 기능과 데이터를 보관
- 뷰 : 사용자에게 정보를 표시
- 컨트롤러 : 사용자로부터 받은 입력을 처리 (실질업무, 비즈니스 로직 수행)
- 서로 영향을 받지않고 개발작업 수행이 가능

7. 코드 (section 27 - 코드)
코드의 필수기능 3가지
 - 식별 기능
 - 분류 기능
 - 배열 기능

순차코드 : 식별에 비중, (분류 및 배열기능 X)
블록코드 : 공통성이 있는 것끼리 구분 (우편번호, 전화번호)
10진코드 : 대상 항목을 10진 분할 -> 각각에 대해 10진 분할(반복) (도서분류식 코드)
그룹분류코드 : 대분류, 중분류, 소분류 (학번:입학연도-단과대-일련번호) ★★★★
연상코드 : 관계있는 숫자나 문자, 기호를 이용 (TV-40 : 40인치 tv)
표의숫자코드 : 물리적인 수치를 코드에 적용 (120-720-1500 : 두께-폭-길이) ★★★
합성코드 : 2개 이상의 코드를 조합

9. DFD(Data Flow Diagram) (section 7. 요구사항 분석)
구조적 분석기법 : 자료흐름도(DFD), 자료사전(DD), 소단위명세서(Mini-Spec), 개체관계도(ERD)

자료흐름도
 - 도형 중심으로 기술
 - 자료의 흐름 및 변환 과정과 기능을 표현
 - 자료흐름그래프, 버블차트라고도 함
 - { 프로세스 : 원형 }, { 자료흐름 : 화살표 }, { 자료저장소 : 저장소 이름 위아래 구분선 }, { 단말 : 사각형 }

2020년 4회 정보처리기사 필기 A형 
오답정리 - 2과목

23. 소스코드 품질 분석 도구 (section 23. 애플리케이션 성능 개선)

정적분석도구
 - 코드를 실행하지 않고 분석하는 도구
 - 종류 : pmd, cppcheck, SonarQube, checkstyle, ccm, covertura

동적분석도구
 - 소스코드를 실행하여 결함을 분석하는 도구
 - 종류 : Avalanche, Valgrind

클린코드 작성원칙 : 가독성, 단순성, 의존성배제, 중복성 최소화, 추상화

29. 인터페이스 구현 검증 도구 (section 73. 인터페이스 구현 검증)

종류 : xUnit, STAF, FitNesse, NTAF, Selenium, watir

STAF : 다양한 환경을 지원하는 테스트 프레임워크
watir : Ruby를 사용하는 애플리케이션 테스트 프레임워크
FitNesse : 웹 기반 테스트 프레임워크
NTAF : naver의 테스트 자동화 프레임워크
xUnit : 다양한 언어 지원하는 테스트 프레임워크 (Junit, Cppuinit, Nunit,...)

34. 테스트 용어 (section. 59 테스트케이스 / 테스트 시나리오 / 테스트 오라클 ) 

테스트 오라클
 - 테스트 결과가 올바른지 판단하기 위해 사전에 정의된 참 값을 입력하여 비교하는 기법 및 활동
 - 종류 : 참(True) 오라클, 샘플링 오라클, 휴리스틱, 일관성검사

테스트 케이스
 - 사용자의 요구사항을 정확하게 준수했는지를 확인하기 위한 테스트 항목 명세서
 - 작성순서 : 테스트 계획 검토 및 자료확보 -> 위험 평가 및 우선순위 결정 -> 테스트 요구사항 정의 -> 테스트 구조 설계 및 테스트 방법 결정 -> 테스트케이스 정의 -> 테스트 케이스 타당성 확인 및 유지보수

테스트 시나리오
 - 시스템별, 모듈별, 항목별로 테스트 케이스를 적용하는 순서에 따라 여러개의 테스트 케이스를 묶은 집합


2020년 4회 정보처리기사 필기 A형 

오답정리 - 3과목

55. 데이터 모델 (section 76. 데이터 모델의 개념)

데이터 모델에 표시할 요소 : 구조, 연산, 제약조건
 - 구조 : 논리적으로 표현된 개체 타입들 간의 관계로 테이터 구조 및 정적인 성질을 표현
 - 연산 : 데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로 데이터베이스를 조작하는 기본 도구
 - 제약조건 : 데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약조건

데이터모델의 구성 요소 : 개체, 속성, 관계

데이터 모델의 종류
 - 개념적 데이터 모델(정보 모델링) : 그림 형태로 표현
 - 논리적 데이터 모델 : 도식 -> 테이블
 - 물리적 데이터 모델 : 성능 및 제약 조건 고려

2021년 1회 정보처리기사 필기 A형

오답정리 - 1과목

2. 유스케이스 (section 10. 주요 UML 다이어그램)
유스케이스 다이어그램
클래스 다이어그램
시퀀스 다이어그램

유스케이스 다이어그램
 - 기능을 사용자 관점에서 표현한 것
 - 구성요소 : 시스템, 액터, 유스케이스, 관계
 - 포함관계(Include) : 필수관계 (공통적으로 적용되는 기능을 별도로 분리한 것)
 - 확장관계(Extend) : 특정 조건에 부합되어 유스케이스의 기능이 확장된 것

클래스 다이어그램
 - 속성과 오퍼레이션(연산, 메서드), 제약조건, 클래스 사이의 관계를 표현한 것 

시퀀스 다이어그램 
 - 시스템이나 객체들이 상호작용하는 과정에서 주고받는 메시지를 그림으로 표현한 것

다이어그램 종류

구조 다이어그램 6가지
 - 클래스 다이어그램, 객체 다이어그램, 컴포넌트 다이어그램, 배치다이어그램, 복합체 구조 다이어그램, 패키지 다이어그램
 
행위 다이어그램 7가지
 - 유스케이스 다이어그램, 시퀀스 다이어그램, 커뮤니케이션 다이어그램, 상태 다이어그램, 활동 다이어그램, 상호작용 다이어그램, 타이밍 다이어그렘


구조적 다이어그램
 - 클래스 다이어그램 : 클래스와 클래스의 속성 사이의 관계
 - 객체 다이어그램 : 객체와 객체 사이의 관계를 표현 (럼바우의 객체 모델링에 사용)
 - 컴포넌트 다이어그램 : 컴포넌트 간의 관계를 표현 (구현 단계에서 사용)
 - 배치 다이어그램 : 물리적 요소들의 위치를 표현 (구현 단계에서 사용)
 - 복합체 구조 다이어그램 : 복합구조의 내부를 표현
 - 패키지 다이어그램 : 패키지들의 관계를 표현

행위 다이어그램
 - 유스케이스 다이어그램 : 사용자의 요구 분슥, 기능 모델링에 사용 (기능 중심 모델링)
 - 시퀀스 다이어그램 : 객체들이 주고받는 메시지를 표현
 - 커뮤니케이션 다이어그램 : 메시지 + 객체들의 관계를 표현
 - 상태 다이어그램 : 클래스, 객체들의 상태 변화를 표현 (럼바우의 동적 모델링에 사용)
 - 활동 다이어그램 : 객체의 처리 로직이나 조건에 따른 처리 흐름을 표현 ( 기능 중심)
 - 상호작용 개요 다이어그램 : 상호작용 다이어그램 간의 제어흐름을 표현
 - 타이밍 다이어그램 : 객체 상태변화와 시각 제약을 명시적으로 표현



6. GoF(Gangs of Four) 디자인 패턴 (Section 28. 디자인 패턴)
생성패턴 5가지, 구조패턴 7가지, 행위패턴 11가지

생성패턴 : 추상팩토리, 빌더, 팩토리 메소드, 프로토타입, 싱글톤
구조패턴 : 어댑터, 브리지, 컴포지트, 데코레이터, 퍼싸드, 플라이웨이트, 프록시
행위패턴 : 책임연쇄, 커맨드, 인터프리터, 반복자, 중재자, 메멘토, 옵서버, 상태, 전략, 템플릿 메소드, 방문자

생성패턴만 일단 정리하자
 - 추상팩토리 : 구체적인 클래스에 의존하지 않고 인터페이스를 통해서 표현하는 패턴
 - 빌더 : 작게 분리된 인스턴스를 건축하듯이 조합하여 객체를 생성하는 패턴
 - 팩토리 메소드 : 객체 생성을 서브클래스에서 처리하도록 캡슐화한 패턴, 실제 생성은 서브클래스가 담당
 - 프로토타입 : 원본 객체를 복제하는 방법으로 객체를 생성하는 패턴, 일반적인 방법으로 객체 생성
 - 싱글톤 : 클래스 내에서 인스턴스가 하나뿐!, 불필요한 메모리 낭비를 최소화, 여러 프로세스가 동시에 참조는 불가능


2021년 2회 정보처리기사 필기 B형

오답정리 1과목

2. GoF(Gangs of Four) 디자인 패턴 (section 28. 디자인패턴)
생성패턴 5가지, 구조패턴 7가지, 행위패턴 11가지

생성패턴
 - 추상팩토리, 빌더, 팩토리메소드, 프로토타입, 싱글톤

구조패턴 7가지
 - 어댑터, 브리지, 컴포지트, 데코레이터, 퍼싸드, 플라이웨이트, 프록시

행위패턴 11가지
 - 책임연쇄, 커맨드, 인터프리터, 반복자, 중재자, 메멘토, 옵서버, 상태, 전략, 템플릿메소드, 방문자

구조패턴에 대해서만 조금 더 정리하자

어댑터 
 - 호환성이 없는 클래스를 이용하고 싶을 때 이용이 가능하도록 변환해주는 패턴
브리지
 - 구현부에서 추상층을 분리한 패턴 (각각이 독립적으로 확장할 수 있음)
 - 기능과 구현을 별도의 클래스로 구현
컴포지트
 - 객체를 트리구조로 구성
 - 복합객체 안에 복합 객체가 포함되는 구조를 구현할 수 있음
데코레이터
 - 객체에 부가적인 기능을 추가하기 위에 다른 객체를 덧붙이는 방식
 - 객체간의 결합으로 기능들을 확장 할 수 있음
퍼싸드 
 - 복잡한 서브클래스들의 상위에 인터페이스를 구성 -> 서브클래스의 기능을 간편히 사용이 가능
 - 서브클래스들 사이에 통합 인터페이스를 제공하는 Wrapper 객체가 필요함
플라이웨이트
 - 인스턴스를 가능한 공유해서 메모리를 절약하는 패턴
 - 다수의 유사 객체를 조작하거나 생성할 때 유용하게 사용이 가능하다
프록시
 - 접근이 어려운 객체와 여기에 연결하려는 객체 사이에서 인터페이스 역할을 수행하는 패턴
 - 네트워크 연결, 메모리의 대용량 객체로의 접근에 주로 이용

7. UML 모델 (section 9. UML - Unified Modeling Language)
UML : 대표적인 객체지향 모델링 언어
UML 이전에 사용되던 방법 : 럼바우, Booch, Jacobson

구성요소 : 사물, 관계, 다이어그램

관계의 종류
 - 연관, 집합, 포함, 일반화, 의존, 실체화

연관 관계 : 2개 이상의 사물이 서로 관련되어 있음
집합 관계(Aggregation) : 하나의 사물이 다른 사물에 포함되어 있는 관계 (독립적,  컴퓨터 - 프린터)
포함 관계(Composition) : 집합 관계의 특수한 형태로, 포함하는 사물의 변화가 포함되는 사물에게 영향을 미치는 관계 (종속적, 문 - 키)
일반화 관계 : 하나의 사물이 다른 사물에 비해 더 일반적인지 구체적인지를 표현
의존 관계 : 서로 사물 사이에 연관은 있으나 서로에게 영향을 주는 짧은 시간 동안만 연관을 유지하는 관계 (등급 - 할인율)
실체화관계 : 사물이 할 수 있거나 해야하는 기능으로 그룹화 할 수 있는 관계 (날수 있는 - 새,비행기)

12. 소프트웨어 아키텍쳐 설계 (section 21. 소프트웨어 아키텍처)
소프트웨어 아키텍처의 품질 속성 (시스템 측면, 비즈니스 측면, 아키텍쳐 측면)

이 중에서 시스템 측면 8가지만 공부하면 된다

성능 좋은 폰으로 변경하면 용량이 사기가 확보된다.

성능
변경용이성
사용성
기능성
가용성
확장성
보안성
(추가) 기타 속성

13. 아키텍처 스타일 (section 22. 아키텍처 패턴)

 아키텍처 패턴의 종류 : 레이어패턴, 클라이언트-서버 패턴, 파이프-필터 패턴, 모델-뷰-컨트롤러 패턴, 기타 여러가지 패턴들

레이어 패턴 
 - 시스템을 계층(Layer)로 구분하여 구성
 - 서로 마주보는 두 개의 계층끼리만 상호작용을 한다 
 - 대표적인 모델은 OSI 참조모델

클라이언트-서버 패턴
 - 하나의 서버 < - >다수의 클라이언트
 - 서버는 항상 대기상태를 유지해야 함 (고정IP 사용)
 - 서로 요청 및 응답을 받기 위해 동기화 되는 경우를 제외하고는 서로 독립적

파이프-필터 패턴 
 - 데이터 스트림 절차를 필터 컴포넌트로 캡슐화 -> 파이프를 통해 데이터를 전송
 - 데이터 변환, 버퍼링, 동기화 등에 사용
 - 대표적인 예 : UNIX의 쉘(Shell)

모델-뷰-컨트롤러 패턴 (MVC 패턴)
 - 모델 : 서브시스템의 핵심 기능 및 데이터를 보관
 - 뷰 : 사용자에게 정보를 표시
 - 컨트롤러 : 사용자로부터 받은 입력을 처리(실질업무, 비즈니스 로직을 수행)

기타 패턴 중에 한가지만 기억하자면 이벤트-버스패턴
이벤트-버스 패턴 
 - 이벤트가 발행되면 해당 채널을 구독한 리스너들이 메시지를 받아서 이벤트를 처리하는 방식 
 - 주요 컴포넌트 4가지 (소스, 리스너, 채널, 버스)

2021년 2회 정보처리기사 필기 B형

오답정리 - 2과목

26. 디지털 저작권 관리(DRM) (Section 47. 디지털 저작권 관리-DRM)

디지털 저작권 관리 구성요소
 - 콘텐츠 제공자(Contents Provider) : 콘텐츠를 제공하는 저작권자
 - 콘텐츠 분배자(Contents Distributor) : 암호화된 콘텐츠를 유통하는 사람
 - 콘텐츠 소비자(Customer) : 콘텐츠를 구매해서 사용하는 주체
 - 클리어링 하우스(Clearing House) : 저작권에 대한 사용권한, 라이선스 발급, 암호화된 키 관리, 결제관리 등을 수행하는 곳
 - 패키저(Packager) : 콘텐츠를 메타데이터와 함께 배포가능한 형태로 묶어서 암호화 하는 프로그램
 - DRM 컨트롤러(DRM Controller) : 콘텐츠의 이용권한을 통제하는 프로그램
 - 보안 컨테이너(Security Contanier) : 콘텐츠 원본을 안전하게 유통하기 위한 전자적인 보안장치

디지털 저작권 관리의 기술요소 (나열만 한번 해보자)
 - 암호화, 키 관리, 암호화 파일 생성, 식별기술, 저작권 표현, 정책 관리, 크랙 방지, 인증


2021년 3회 정보처리기사 필기 B형
오답 정리 - 1과목

1. 요구사항 검증 (section 6. 요구사항 정의)

요구사항 검증 과정을 통해서 대부분의 문제를 발견할 수는 있으나 모든 문제를 발견할 수는 없다.

요구사항 분석 (구조적 분석, 객체 지향적 분석)
 - 구조적 분석을 하는 분석용 도구 : DFD, DD, 소단위 명세서(Mini-Spec), ERD

요구사항 유형
 - 기능 요구사항 : 입출력, 처리, 조회
 - 비기능 요구사항 : 성능, 보안, 품질, 각종 제약조건

요구공학 (Requirements Engineering)
 - 요구사항 변경의 원인과 처리방법을 이해하고, 요구사항 관리 프로세스의 품질을 개선해서, 소프트웨어 프로젝트 실패를 최소화 하는 것을 목표로 한다.
 - 무엇을 개발해야하는지 요구사항을 정의하고, 분석 및 관리하는 프로세스를 연구하는 학문이다.


9. 마스터-슬레이브(Master-Slave) 아키텍처 (section 22. 아키텍처 패턴)

마스터-슬레이브 패턴(Master-Slave Pattern)
 - 마스터 컴포넌트 : 모든 작업의 주체
 - 슬레이브 컴포넌트 : 마스터 컴포넌트의 지시에 따라 작업을 수행해서 결과를 반환
 - 활용처 : 장애 허용 시스템, 병렬 컴퓨팅 시스템
 - 마스터 컴포넌트가 동일한 구조의 슬레이브 컴포넌트로 작업을 분할시킴 -> 슬레이브 컴포넌트에서 처리된 결과물을 다시 돌려받는 방식으로 작업을 수행

오답 정리 
 - 마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다 (연산도 책임진다!)
 - 슬레이브 프로세스는 데이터 수집 기능을 수행할 수 있다. (마스터 프로세스가 하는 연산, 통신, 조정 등의 기능은 제한된다)
 - 실시간 시스템에서 사용된다.

주요 아키텍처 패턴 : 레이어패턴, 클라이언트-서버 패턴, 파이프-필터 패턴, 모델-뷰-컨트롤러 패턴

17. 객체지향 분석기법 (section 23. 객체지향 Object-Oriented)

오답 체크 
 - 객체지향 분석기법은 순차적인 처리가 X -> 부품을 조립하듯 클래스를 조립하는 방식으로 처리됨 (상향식, 하향식 방식 모두 사용이 가능)
 - 데이터와 행위를 하나로 묶어 객체를 정의하고 추상화 시키는 작업이라 할 수 있다.
 - 동적 모델링 기법이 사용 가능
 - 코드 재사용에 의한 프로그램 생산성 향상 및 요구에 따른 시스템의 쉬운 변경이 가능

객체지향의 핵심 
- 현실 세계의 개체를 하나의 객체로 만듬
 - 기계적인 부품들을 조립하듯이 객체들을 조립해서 소프트웨어를 조립하는 기법


2021년 3회 정보처리기사 필기 B형
오답정리 2과목

25. 테스트 드라이버 (section 57. 통합 테스트)

테스트 드라이버와 테스트 스텁의 차이점

테스트 드라이버(Test Driver)
 - 상향식 테스트 방식에 사용
 - 상위 모듈이 존재하지 않을 때 모듈간의 인터페이스 역할 담당

테스트 스텁(Test Stub)
 - 하향식 테스트 방식에 사용
 - 일시적으로 제공되는 가짜 모듈의 역할을 담당 (가짜 하위 모듈)

30. 소프트웨어 테스트 - 검증과 확인 (section 53. 애플리케이션 테스트)

용어 정리
확인(Validation) 
 - 사용자의 입장에서 개발한 소프트웨어가 고객의 요구사항에 맞게 구현되었는지를 확인하는 것

검증(Verification)
 - 개발자의 입장에서 개발한 소프트웨어가 명세서에 맞게 만들어졌는지를 점검하는 것

보기 4번 : 검증은 작업 제품이 사용자의 요구에 적합한지 측정하며, 확인은 작업 제품이 개발자의 기대를 충족시키는지를 측정한다. 
틀린 보기 분석 
 - 사용자의 요구 X -> 사용자의 입장으로 개발하는 것, 요구는 고객의 요구사항
 - 개발지의 기대 X -> 개발자의 입장으로 개발하는 것, 측정은 고객의 요구사항
이거 왜 틀렸지?? 헷갈릴때는 보기를 좀 더 제대로 읽자... 

34. 소프트웨어 개발 활동 (section 61. 결함 관리)
결함(Fault)의 정의
 - 오류 발생, 작동 실패 등과 같이 개발자가 설계한 것과 다르게 동작하거나 다른 결과가 발생하는 것을 의미
 - 소프트웨어 개발 활동을 수행함에 있어서 시스템이 고장을 일으키게 하며,  오류가 있는 경우에 발생함

용어 정리 몇가지
 
결함 심각도 (치명도 표현)
 - 결함이 전체 시스템에 미치는 치명도를 표현
 - 3단계(High, Medium, Low) 또는 5단계(Critical, Major, Normal, Minor, Simple)로 표현

결함 우선순위 (처리에 대한 신속성 척도)
 - 결함 처리에 대한 신속성을 나타내는 척도
 - 심각도가 높다고 반드시 우선순위가 높은 것은 X
 - 분류 방법 (Critical, High, Medium, Low 또는 즉시해결, 주의요망, 대기, 개선권고)

37. 최악의 경우 검색효율이 나쁜 트리구조 (section 63. 복잡도)

이진탐색트리의 평균 시작 복잡도 O(logN)
 - 그러나 한쪽으로 치우쳐진 경우 성능을 보장하기가 어려움
 - 이를 보완하고자 개발된 트리가 균형트리임 (AVL트리, 2-3트리, 레드-블랙트리)


39. 테스트 케이스 자동 생성 도구 (section 60. 테스트 자동화 도구)

테스트자동화 도구의 유형 중에 테스트 케이스 자동생성도구가 있음

테스트 케이스 자동 생성 도구의 종류
 - 자료흐름도 : 자료 원시 프로그램을 파싱해서 자료흐름도를 작성함
 - 기능테스트 : 기능을 구동시키는 모든 가능한 상태를 파악하여 이에 대한 입력을 작성
 - 입력 도메인 분석 : 원시 코드 내부를 참조하지 않고 입력 변수의 도메인을 분석하여 테스트 데이터를 작성
 - 랜덤테스트 : 입력값을 무작위로 추출하여 테스트

테스트 자동화 도구의 유형
 - 정적 분석 도구 : 프로그램을 실행하지 않고 분석
 - 테스트 케이스 생성 도구 : 자료흐름도, 기능테스트, 입력도메인 분석, 랜덤테스트
 - 테스트 실행 도구 : 데이터 주도 접근 방식, 키워드 주도 접근 방식
 - 성능 테스트 도구 : 성능의 목표 달성여부를 확인 (APM : Application Performance Monitoring)
 - 테스트 통제 도구 : 형상관리도구, 결함 추적/관리 도구
 - 테스트 하네스 도구 : 컴포넌트 및 모듈을 테스트하는 환경의 일부분, 테스트를 지원하기 위해 생성된 코드와 데이터를 의미. 

2020년 3회 정보처리기사 필기 A형

오답정리 5과목

8. 기능 점수(Functional Ponit) 모형 (section 170. 수학적 산정 기법)

기능점수(FP) 모형 
 - 요인별 가중치를 부여하여 비용을 산정하는 기법
 - 가중치를 부여하는 기능들 (자료 입력양식, 정보출력보고서, 명령어, 데이터파일, 외부 루틴과의 인터페이스)


수학적 산정기법
 - COCOMO 
    (원시코드라인수에 의한 비용산정 - 조직형[5만], 반분리형[5~30만], 내장형[30만이상])
    - 기본형 COCOMO : 양에 따라 산정
    - 중간형 COCOMO : 양+특성을 고려하여 산정
    - 발전형 COCOMO : 양+특성+노력을 고려하여 산정
 - Putnam : 노력에 주안점을 둔 모형 (Rayleigh-Norden 곡선)
 - 기능점수(FP) 모형 : 요인별로 가중치를 부여하여 산정하는 기법

98. 소프트웨어 프로세스를 평가하는 국제표준 (section 173. 소프트웨어 개발 표준)

소프트웨어 개발표준
 - ISO/IEC 12207 : 기본! (표준 소프트웨어 생명주기 프로세스)
 - CMMI : 능력 성숙도 통합 모델(Capability Maturity Model Integration) - 개발조직의 성숙도를 평가하는 모델! - "성숙도"가 키워드!
 - SPICE : 소프트웨어 처리 개선 및 능력 평가기준! - 소프트웨어 프로세스를 평가 및 개선하는 국제표준! (공식명칭은 ISO/IEC 15504) - "평가"가 키워드!


2020년 4회 정보처리기사 필기 A형

오답정리 5과목
82. CMM(Capability Maturity Model) 모델 (section 173. 소프트웨어 개발 표준)
CMMI (Capability Maturity Model Integration, 능력 성숙도 통합 모델)
CMMI 모델의 5가지 단계
 - 초기 : 정의된 프로세스가 X
 - 관리 : 규칙화된 프로세스
 - 정의 : 표준화된 프로세스
 - 정량적 관리 : 예측이 가능한 프로세스
 - 최적화 : 지속적 개선 프로세스

소프트웨어 개발 표준 3가지
 - ISO/IEC 12207 : 기본!, 표준 소프트웨어 생명주기 프로세스
 - CMMI(능력 성숙도 통합 모델) : 개발 조직의 성숙도를 평가하는 모델
 - SPICE (Software Process Improvement and Capability dEtermination) : 소프트웨어 처리 개선 및 능력 평가 기준, 평가!가 키워드!

84. 서비스 지향 아키텍처 기반 애플리케이션 (section 180. SW/보안 관련 신기술)

서비스 지향 아키텍처 
 - SOA 기반 애플리케이션 구성 계층 : 표현, 업무프로세스, 서비스, 애플리케이션, 데이터저장

주요 SW/보안 관련 신기술 몇가지만 정리!
 - 뉴럴링크 : 테슬라, 일론머스트, 사람의 뇌워 컴퓨터를 결합하는 기술을 개발하기 위한 회사
 - 딥러닝 : 인간의 두뇌를 모델로 만들어진 인공신경망 기반의 기계 학습 기술
 - 그레이웨어 : 사용자 입장에서는 유용할 수 도 있고, 악의적일수도 있는 애드웨어, 트랜웨어, 기타 악성코드나 기타 악성 공유웨어
 - 매시업 : 5G의 핵심 기술중 하나, 하나의 물리적인 네트워크를 다수의 가상 네트워크로 분리
 - 디지털 트윈 : 현실의 사물을 소프트웨어로 가상화한 모델, 모의실험을 하기 위한 용도로 사용
 - 텐서플로 : 구글, 데이터흐름 프로그래밍 오픈소스, 사용처 : 구글검색, 음성인식, 번역 등

89. 정보의 접근 통제 정책 (section 101. 데이터베이스 보안 - 접근 통제)
접근통제 : 데이터가 저장된 객체와 사용하려는 주체 사이의 정보 흐름을 제한하는 것

임의 접근통제(DAC) : 사용자 신원에 따라 접근 권한을 부여 (Revoke, Grant)
강제 접근통제(MAC) : 시스템이 접근 통제 권한을 지정, 주체와 객체의 등급을 비교하여 부여
역할기반 접근통제(RBAC) : 사용자의 역할에 따라 접근 권한을 부여하는 방식


2021년 1회 정보처리기사 필기 A형

오답정리 5과목

100. 세션 하이재킹 (section 191. 세션 통제)
세션 하이재킹 - 서버에 접속하고 있는 클라이언트들의 세션 정보를 가로채는 공격기법

세션 하이재킹을 탐지하는 방법
 - 비동기화 상태 탐지
 - ACK Storm 탐지
 - 패킷의 유실과 재전송 증가 탐지
 - 예상치 못한 접속의 리셋 탐지

2021년 2회 정보처리기사 필기 B형

오답정리 5과목
82. 침입 차단 시스템(방화벽) (section 204. 보안 솔루션)
스크린 서브넷(Screened Subnet)은 스크리닝 라우터(Screening Router)가 내부 네트워크와 베스션 호스트 사이에 하나, 베스션 호스트와 인터넷 사이에 사나로 총 2개가 놓이는 형태의 방화벽 구축방법이다.

보안 솔루션의 종류 : 침입탐지시스템(IDS), 침입방지시스템(IPS, 방화벽+침입탐지시스템), 데이터유출방지(DLP), 웹방화벽, VPN(가상사설통신망), NAC(Network Access Control), SSH(시큐어 셀)

침입 탐지 시스템(IDS : Intrusion Detection System)
 - 오용 탐지(Misuse Detection) : 미리 입력해둔 공격패턴이 감지됐을 시 알려줌
 - 이상 탐지(Anomaly Detection) : 평균 시스템 상태를 기준으로 비정상적인 행위나 자원사용이 감지되면 알려줌

침입 방지 시스템(IPS : Intrusion Prevention System) : 방화벽과 침입탐지시스템이 결합

VPN (Virtual Private Network, 가상 사설 통신망) : 공중 네트워크와 암호화 기술을 이용하여 사용자가 마치 자신의 전용회선을 사용하는 것처럼 해주는 보안 솔루션

SSH (Secure SHell, 시큐어 쉘)
 - 다른 컴퓨터에 로그인, 원격명령실행, 파일 복사 등을 수행할 수 있도록 다양한 기능을 지원하는 프로토콜 또는 이를 응용한 프로그램
 - 기본적으로는 22번 포트를 이용한다.

대표적인 포트번호
 - http : 80
 - https : 443
 - FTP : 21
 - SSH : 22
 - SMTP : 25

83. 코드 오류 (section X)
코드 오류의 종류 
 - 필사 오류 (Transcription Error) : 임의의 한 자리를 잘못 기록한 경우
 - 전위 오류 (Transposition Error) : 입력시 좌우 자리를 바꾸어 기록한 경우
 - 이중 오류 (Double Transposition Error) : 전위 오류가 2개 이상 발생한 경우
 - 생략 오류 (Omission Error) : 입력시 한 자리를 빼놓ㅎ고 기록한 경우
 - 추가 오류 (Addition Error) : 입력시 한 자리를 더 추가하여 기록한 경우
 - 임의 오류 (Random Error) : 오류가 두 가지 이상 결합하여 발생한 경우

85. Secure OS (section 185. Secure OS)
Secure OS : 보안 기능을 갖춘 커널을 이식하여 시스템 자원을 보호하는 운영체제

Secure OS의 보안 기능
 - 식별 및 인증
 - 임의적 접근통제(DAC)
 - 강제적 접근통제(MAC)
 - 객체 재사용 보호
 - 완전한 조정
 - 신뢰 경로
 - 감사 및 감사기록 축소

88. ISO 12207 (section 173. 소프트웨어 개발 표준)

ISO/IEC 12207 기본적인 소프트웨어 개발 표준
 - 기본 생명주기 프로세스 : 획득, 공급, 개발, 운영, 유지보수 프로세스
 - 지원 생명주기 프로세스
 - 조직 생명주기 프로세스

CMMI (Capability Maturity Model Integration) : 조직의 업무 능력 및 성숙도를 평가하는 모델
 - 초기, 관리, 정의, 정량적관리, 최적화 5단계로 구분됨

SPICE (Software Process Improvement and Capability dEtermination) : 소프트웨어 프로세스를 평가 및 개선하는 국제 표준
 - 6단계로 구분되어 있음

91. 컴포넌트 기반 SW 개발 표준 산출물 (section 165. 소프트웨어 개발 방법론)

컴포넌트 기반 방법론 (CBD : Component Based Desing)
 - 컴포넌트의 재사용이 가능
 - 생산성 및 품질을 향상시킬 수 있음

소프트웨어 개발방법론 6가지
 - 구조적 방법론 : 절차적 방법론, 처리 중심, 분할과 정복(하향식)
 - 정보공학 방법론 : 자료 중심, 대규모 정보시스템 구축
 - 객체지향 방법론 : 부품 조립하듯 구현
 - 컴포넌트 기반 방법론 : 컴포넌트의 재사용
 - 애자일 방법론 : 고객의 요구사항 변화에 민첩하게 대응, (XP, 스크럼, 칸반, 크리스탈)
 - 제품 계열 방법론

99. Hash 기법 (section 199. 암호 알고리즘)

Hash
 - 고정된 길이의 값이나 키로 변환하는 것
 - 복호화가 거의 불가능한 일방향 함수에 해당함

암호 알고리즘의 분류
 - 단방향 : Hash
 - 양방향
   - 개인키 : Block방식(DES), Stream 방식
   - 공개키 : RSA

블록 암호화 방식 : DES, SEED, AES, ARIA

공개키 암호화기법
 - 공개키 암호화 대상이 n개 일때 키의 개수는 n(n-1)/2\
 - 대표적으로 RSA가 있음
 - 키의 분배가 용이하고 관리해야할 키의 개수가 적음
 - 암호화/복호화 속도가 느리고, 알고리즘이 복잡함

2021년 3회 정보처리기사 필기 B형
오답정리 5과목

82. 접근제어 방법 (section 101. 데이터베이스 보안 - 접근 통제)

접근통제 : 주체 사이의 정보 흐름을 제한하는 것

임의 접근 통제 (DAC, Discretionary Access Control)
 - 사용자의 신원에 따라 접근원한을 부여하는 방식

강제 접근 통제 (MAC, Mandatory Access Control)
 - 주체와 객체의 등급을 비교하여 접근 권한을 부여하는 방식

역할기반 접근 통제 (RBAC, Role Based Access Control)
 - 사용자의 역할에 따라 접근 권한을 부여하는 방식

90. IT 스토리지 (section 176. 


2020년 8월 22일 정보처리기사 기출문제
오답정리 3과목

49. 분산 데이터베이스 투명성

분산 데이터베이스 투명성 6가지
 - 분할 투명성 : 하나의 논리적 Relation이 여러 단편으로 분할되어 각 단편의 사본이 여러 site에 저장
 - 위치 투명성 : 사용하려는 데이터의 저장장소 명시 불필요
 - 지역사상 투명성 : 지역DBMS와 물리적DB 사이의 Mapping 보장
 - 중복 투명성 : DB 객체가 여러 Site에 중복되어 있는지 알 필요가 없는 성질
 - 장애 투명성 : 장애가 발생해도 트랜잭션을 정확하게 처리하고 데이터 무결성을 보장함
 - 병행 투명성 : 하나의 논리적 릴레이션이 여러 단편으로 분할되어 각 단편의 사본이 여러 시스템에 저장되어있음을 인식할 필요가 있음


2020년 3회 정보처리기사 필기 B형
오답정리 5과목

62. 오류 제어 (section 163. )

오류제어
자동 반복 요청(ARQ : Automatic Repeat reQuest)
 - Stop-and-Wait(정지-대기) ARQ : 수신 확인신호를 받고나서 전송 (한번에 하나씩)
 - Go-Back-N ARQ : 부정 응답을 받으면 오류 발생 이후의 모든 블록을 재전송
 - Selective-Repeat(선택적 재전송) ARQ : 오류가 발생한 블록만을 재전송
 - Adaptive (적응적) ARQ : 데이터 블록의 길이를 채널 상테에 따라 동적으로 변경

66. C언어 프로그래밍 (section 133. 연산자)

int c = 2;
!c 는 참/거짓?

C에서 참/거짓
참 : 0
거짓 : 0이 아닌 값


68. SSTF 스케쥴링 (section 157. 주요 스케쥴링 알고리즘)
SSTF : 현재 위치에서 가장 가까운 거리에 있는 트랙의 요청을 먼저 서비스 한다.

주요 스케쥴링 알고리즘
- FCFS (FIFO, 선입선출) : 도착한 순서에 따라 차례로 CPU에 할당하는 알고리즘
- SJF(Shortest Job First, 단기 작업 우선) : 실행히간이 가장 짧은 프로세스에게 할당해줌
- HRN(Hightest Response-ratio Next)
 우선순위 계산식 = (대기시간 + 서비스시간) / 서비스 시간


2021년 2회 정보처리기사 필기 B형
오답정리 5과목

65. OSI 7계층 (section 161. OSI 참조 모델)
OSI 참조 모델에서의 데이터 단위
 - 물리계층 : 비트
 - 데이터 링크 계층 : 프레임
 - 네트워크 계층 : 패킷
 - 전송 계층 : 세그먼트
 - 세션, 표현, 응용계층 : 메시지

모의고사 CBT
소스코드 품질분석 도구
- 정적 분석 도구 : pmd, cppcheck, SonarQube, ccm
- 동적 분석 도구 : valance, Avalanche, Valgrind

화이트박스 테스트 
 - 기본경로(BasisPath)란 내부의 논리적은 모든 경로를 지나야한다.

단위테스트 종류
 - 명세기반테스트 : 주어진 명세를 빠짐없이 테스트 케이스로 구현하고 있는지 확인하는 테스트 
 - 구조 기반 테스트 : 프로그램 내부 구조 및 복잡도를 검증하는 화이트박스 테스트 시행, 제어 흐름과 조건 결정 등이 목적

성능테스트 도구 : 애플리케이션의 처리량, 응답시간, 경과시간, 자원사용률 등 성능 목표 달성 여부 확인

저작권관리 구성요소
 - 콘텐츠 분배자
 - 패키저
 - 클리어링하우스
 - DRM 컨트롤러


블랙박스 테스트 종류
 - 동치분할검사
 - 경계값 분석
 - 원인-효과 그래프 검사
 - 오류 예측 검사
 - 비교 검사

화이트 박스 테스트 종류
 - 기초 경로 검사
 - 조건 검사
 - 루프 검사
 - 데이터흐름 검사

정적분석 도구
 - pmd : 소스 코드에 대한 미사용 변수, 최적화안된 코드 등 결함을 유발할 수 있는 코드 검사
 - cppcheck : C/C++ 코드에 대한 메모리 누수, 오버플로우 등 분석
 - SonarQube : 중복 코드 복잡도 코딩 설꼐 등을 분석하는 소스분석 통합 플랫폼
 - ccm : 다양한 언어의 코드 복잡도를 분석
 - cobertura : 자바 언어의 소스코드 복잡도 분석 및 테스트 커버리지 측정

2020년 1회 정보처리기사 필기 
오답정리 
5. 소프트웨어 설계시 구축된 플랫폼의 성능 특성 분석에 사용되는 측정항목
 - 응답시간(Response Time)
 - 가용성(Availability)
 - 사용율(Utilization)
 - 경과시간(Availability)

8. 자료사전에서 사용되는 기호
 + : 구성
 { } : 반복
 = : 정의
 ( ) : 생략
 ** : 주석
 [ | ] : 선택

13. 요구사항 분석
 - 비용과 일정에 대한 제약 설정
 - 타당성 조사
 - 요구사항 정의 문서화

설계명세서 작성은 다음 단계인 "요구사항 명세"에서 진행한다.

15. 공통 모듈 원칙
 - 정확성
 - 명확성
 - 완전성
 - 일관성
 - 추적성

16. 객체지향기법
 - 집단화
 - 일반화
 - 캡슐화
 - 추상화

24. 구현 검증 도구 
 - xUnit : Java, C++ 등 다양한 언어를 지원하는 단위 테스트 프레임워크
 - STAF : 서비스 호출 및 컴포넌트 재사용 등 환경 지원하는 테스트 프레임워크
 - FitNesse
 - NTAF 
 - Selenium
 - Watir : Ruby를 사용하는 애플리케이션 테스트 프레임워크

52. 분단 데이터베이스의 목표
 - 장애투명성(Failure Transparency) : 트랜잭션, DBMS, 네트워크, 컴퓨터 장애에도 트랜잭션을 정확히 처리
 - 병행투명성(Concurrency Transparency) : 다수의 트랜잭션이 동시에 실현되더라도 그 결과는 영향을 받지 않음
 - 위치 투명성(Location Transparency)
 - 중복 투명성(Replication Transparency)

56. 데이터 제어언어(DCL)의 기능
 - 데이터 보안
 - 무결성 유지
 - 병행제어
 - 회복

논리적, 물리적 데이터 구조 정의는 DDL의 기능이다.

71. 프로세스 상태의 종류
보류(pending) 
준비(ready)
실행(running)
대기(wait / blocked)
교착(deadlock)
완료(terminated / exit)

request란 상태는 없다.

74. IEEE 802.11 워킹 그룹의 무선 LAN 표준화 현황 중 QoS 강화를 위해 MAC지원 가능을 채택한 것
802.11e

IEEE 802.11 : 워킹 그룹 무선 LAN 표준화. 2.4GHz, CSMA/CA

76. 스크립트 언어

스크립트언어 : 자바스크립트, VB, ASP, JSP, PHP, 파이썬, 쉘스크립트, Basic

81. 비용산정기법
Rayleigh-Norden 곡선의 노력 분포도를 이용한 프로젝트 비용 산정 기법은?
정답 : Putnam 모형

Putnam 기법 : 소프트웨어 생명주기의 전 과정동안 사용될 곡선의 노력 분포를 가정해주는 모형
 - Rayleigh-Norden 곡선의 노력분포도를 기초로 한다

FP기법은 기능점수모형이다. FP 기법은 요인별 가중치를 합산하여 총 기능점수를 산출하고 이를 이용해 비용을 산정하는 기법이다.

85. CMM(Capability Maturity Model) 모델의 레벨

이거는 맨날 틀리네...
CMM모델의 레벨 
 - 초기단계 -> 관리단계 -> 정의단계 -> 정량적 단계 -> 최적화단계

아.. 이거 개발조직의 성숙도를 평가하는 모델이었는데... 계획단계가 있을리가 없지...

87. 크래커가 침입하여 백도어를 만들거나 설정파일을 변경했을 때 분석하는 도구
 정답 : tripwire

- tripwire : 크래커가 침입하여 백도어를 만들어 놓거나 설정파일을 변경했을 때 분석하는 도구
- Cron : 작업 예약 스케쥴러


97. 테일러링 개발방법론

내부기준이다....

테일러링이란 프로젝트 상황에 맞게 정의된 개발방법 절차, 사용기법 등을 수정하고 보완하는 작업이다.

태일러링 기준
- 내부적 요건 : 목표 환경, 요구사항, 프로젝트 규모, 보유기술
- 외부적 요건 : 법적 제약사항, 표준 품질 기준

100. 시스템 내의 정보는 오직 인가된 사용자만 수정할 수 있는 보안 요소는?
정답 : 무결성

인가된 사용자만 접근할 수 있는 거면 기밀성이 답이나, 수정할 수 있는것이기때문에 무결성이 정답이다.

2022년 03월 05일 기출문제 1회
오답정리 1과목

5. 설계방법 (하향식, 상향식)
하향식 통합테스트 
 - 핵심단어 : Stub(스텁), 깊이우선통합법, 넓이우선통합법

상향식 통합테스트
 - 핵심단어 : 드라이버, 클러스터
 - 하위 모듈을 클러스터(cluster)로 결합

9. UI 설계도구

UI설계도구의 종류
 - 와이어프레임, 목업, 스토리보드, 프로토타입, 유스케이스

목업
 - 디자인, 사용방법설명, 평가 등을 위해 실제 화면과 유사하게 만든 정적인 형태의 모형
 - 시각적으로만 구성요소를 배치하는 것으로 실제로 구현되지는 않음

스토리보드 
- 디자이너와 개발자가 최종적으로 참고하는 작업 지침서
- 상단이나 우측에 제목, 작성자 등을 입력하고 좌측에는 UI화면, 우측에 디스크립션을 기입

프로토타입
 - 와이어프레임이나 스토리보드 등에 인터랙션을 적용
 - 실제 구현된 것처럼 테스트가 가능한 동적인 형태의 모형

유스케이스
 - 사용자 측면에서의 요구사항을 구조적으로 표현한 것
 - 사용자가 원하는 목표를 달성하기 위해 수행할 내용을 기술함


13. 클래스 설계원칙
답안 외우도촉 하자 
개방-폐쇄의 원칙
 - 클래스는 확장에 대해 열려있어야하고, 변경에 대해 닫혀 있어야 한다.

19. 용어 정리

EAI (Enterprise Application Integration) : 기업 응용 프로그램 통합
 - 기업 내 ERP, CRM, SCP 같은 애플리케이션 간에 상호 연동이 가능하게 하는 통합 솔루션

Duplexing : 이중화(데이터베이스의 회복기법 중 가장 간단한 것)

FEP(Front-End Processor) : 입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 차지하는 시간을 줄여주는 프로그램이나 하드웨어


2022년 03월 05일 기출문제 1회
오답정리 2과목

27. 소프트웨어 재공학의 주요 활동기준
Analysis : 재공학 대상을 선정하기 위해 기존 소프트웨어를 분석하는 것
Migration : 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 작업
Restructuring : 기존 소프트웨어를 향상시키기 위하여 코드를 재구성 하는 작업
Reverse Engineering : 기존 소프트웨어를 분석하여 소스코드를 얻어내는 작업


38. 소프트웨어 품질 관련 국제표준 ISO/IEC 25000
 - SW 품질 평가를 위한 통합 모델 표준임
 - "SQuaRE"로도 불린다
 - ISO/IEC 9126, ISO/IEC 12119, ISO/IEC 14598을 통합한 모델


2022년 03월 05일 기출문제 1회
오답정리 4과목

61. IPv4와 IPv6의 차이
IPv4
 - 32비트 주소
 - 유니캐스트/멀티캐스트/브로드캐스트 사용

IPv6 
 - 128비트 주소
 - 기존의 주소부족 문제를 해결하기 위함
 - 인증성/기밀성/무결성 지원 => 보안성 강화
 - 유니캐스트/멀티캐스트/애니캐스트 사용

80. UNIX 시스템의 쉘의 주요 기능
하드웨어 -> 커널 -> 쉘 -> 유틸리티 -> 사용자

커널 : 자원관리! 
쉘 : 사용자 명령어 처리!


2022년 03월 05일 기출문제 1회
오답정리 5과목

83. 
Switch Jamming
 - 스위치의 기능이 방해받아 정상 동작을 하지 못해 스위치가 더미허브처럼 작동하게 되는것을 말함
 - 위조된 매체 접근제어(MAC) 주소를 지속적으로 네트워크로 흘려보내서, 스위치 MAC 주소 테이블의 저장기능을 혼란시키고, 더비허브(Dummy Hub)처럼 작동하게 하는 공격

FTP Flooding
 - FTP 프로토콜을 사용하는 서버에 다량의 SYN 패킷을 보내 SYN Flooding을 일으키는 것을 말함
 - 다량의 SYN 패킷을 보내지고 메모리를 대기시키지만 응답을 받지 못해서 대기 중인 메모리가 계속 쌓이는 현상


87. 블루투스 공격

블루버그 : 블루투스 장비 사이의 취약한 연결관리를 악용 (취약한 연결관리 공격)
블루프린팅 : 블루투스 공걱장치의 검색활동
블루재킹 : 블루투스를 이용해서 스팸처럼 명함을 익명으로 퍼뜨리는 것

88. DoS관련 공격

Smurf 공격
 - 브로드캐스트를 활용해서 네트워크의 임의의 시스템들에 패킷을 보내게 만드는 공격
 - 멀티캐스트가 아니라 브로드캐스트임!

89. 파이썬 프레임워크
Scrapy : 파이썬 기반의 웹크롤러 프레임워크
 
97. 로그 파일

wtmp 
 - 리눅스 시스템에서 사용자의 성공한 로그인/로그아웃 정보 기록
 - 시스템의 종료/시작 시간 기록


2022년 4월 24일 기출문제
오답정리 

2. 메시지지향 미들웨어(MOM, Message-Oriented Middleware)
 - 메시지 기반의 비동기형 메시지를 전달하는 방식의 미들웨어
 - 온라인 업무보다는 이기종 분산 데이터 시스템의 데이터 동기를 위해 주로 사용된다.
 - 즉각적인 응답을 원하는 경우가 아닌, 느리더라도 안정적인 응답을 필요로 하는 경우에 주로 사용된다.


12. 객체지향 개념
속성과 관련된 연산(Operation)을 클래스 안에 묶어서 하나로 취급하는 것을 의미하는 객체지향 개념은?
답안 : Encapsulation

캡슐화 : 서로 관련성 많은 데이터들과 연산들을 묶는다
클래스 : 하나 이상의 유사한 객체들을 묶는다

17. UI의 종류
 - NUI(Natural User Interface) : 사용자의 말이나 행동으로 기기 조작하는 인터페이스
 - OUI(Oragnic User Interface) : 모든 사물과 사용자 간의 상호작용을 위한 인터페이스
 - VUI(Voice User Interface) : 사람의 음성으로 기기를 조작하는 인터페이스

66. RIP 라우팅 프로토콜
RIP (Routing Information Protocol)
 - IGP에 해당한다
 - 최단 경로 탐색에는 Bellman-Ford 알고리즘을 사용한다.
 - 소규모 네트워크 환경에 적합하다.
 - 최대 홉 카운트를 15홉 이하로 한정하고 있다.
 - 거리 벡터 라우팅 프로토콜

74. C언어 참, 거짓
참은 1
거짓은 0 (1이 아니면 거짓)


78. 결합도의 종류

내용결합도 : 하나의 모듈이 직접적으로 다른 모듈의 내용을 참조할때
공통결합도 : 두 모듈이 동일한 전역 데이터에 접근할 때
외부결합도 : 데이터변수를 외부의 다른 모듈에서 참조할때
제어 결합도 : 흐름을 제어하기 위해 제어신호를 이용할 때
스탬프 결합도 : 배열이나 레코드같은 자료구조가 전달될 때
자료 결합도 : 자료요소로만 구성될 때

"내공은 외제를 쓰자"

응집도 종류

기능적 응집도
순차적 응집도
교환적 응집도
절차적 응집도
시간적 응집도
논리적 응집도
우연적 응집도
"기순병사를 교환하는 절차시에는 논의를 하자"


83. 
NFC (Near Field Communication, 초고속 근접 무선통신)
 - 사용기술 : Zing (가까이 가면 지이잉~)

84. 취약점관리를 위한 응용프로그램의 보안설정과 가장 거리가 먼 것은?

선택한 오답 : 운영체제의 정보수집 제한
정답 : 서버 관리실 출입 통제

87. Mesh Network 설명
 - 다른 국을 향하는 호출이 중계에 의하지 않고 직접 접속되는 그물 모양의 네트워크
 - 통신량이 많은 비교적 소수의 국 사이에 구설될 경우 경제적이며 간편하나, 다수의 국 사이에서는 회선이 세분화되어 비경제적일 수 있다
 - 해당 형태의 무선 네트워크의 경우 대용량을 빠르고 안전하게 전달할 수 있어 행사장이나 군 등에서 많이 활용된다.

93. 대칭 암호 알고리즘과 비대칭 암호 알고리즘
 틀린 설명 : 대칭 암호 알고리즘은 비밀키 전달을 위한 키 교환이 필요하지 않아 암호화 및 복호화의 속도가 빠르다
 - 대칭 암호와 알고리즘은 키 교환이 필요하다
 - 따라서 키를 교환하는 중에 키가 탈취될 수 있다

96. 신원 확인 과정

Authentication
 - 자신의 신원(identity)을 시스템에 증명하는 과정
 - authentication의 예 : 아이디와 비밀번호를 입력하는 과정

Authorization 
 - 권한을 부여하는 것

51. Partially Committed

Partially Committed : 마지막 연산이 실행된 직후의 상태로 아직 Commit 연산이 실행되기 전 상태

